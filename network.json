---
layout: null
---
{% capture artist_data %}{% for post in site.posts %}{% for item in post.network %}{{ item.artist }}|{% endfor %}{% endfor %}{% endcapture %}
{% assign artist_array = artist_data | split: '|' %}

{% for item in artist_array %}{% unless unique_artists contains item %}{% capture unique_artists %}{{ unique_artists }}{{ item }}|{% endcapture %}{% else %}{% capture artist_dupes %}{{ artist_dupes }}{{ item }}|{% endcapture %}{% endunless %}{% endfor %}

{% assign unique_artists_array = unique_artists | split: '|' %}
{% assign artist_dupes_array = artist_dupes | split: '|' %}


{% capture theme_data %}{% for post in site.posts %}{% for item in post.network %}{{ item.theme }}|{% endfor %}{% endfor %}{% endcapture %}
{% assign theme_array = theme_data | split: '|' %}

{% for item in theme_array %}{% unless unique_themes contains item %}{% capture unique_themes %}{{ unique_themes }}{{ item }}|{% endcapture %}{% else %}{% capture theme_dupes %}{{ theme_dupes }}{{ item }}|{% endcapture %}{% endunless %}{% endfor %}

{% assign unique_themes_array = unique_themes | split: '|' %}
{% assign theme_dupes_array = theme_dupes | split: '|' %}


{
  "nodes": [ {% for item in unique_artists_array %}{% assign node_artist = item %} 
    {
      "id": "a-{{ node_artist | downcase | remove: ' ' }}",
      "label": "{{ node_artist }}",
      "type": "artist",
      "url": "siteindex.html#{{ node_artist | downcase | remove: ' ' }}",
      "size": {% assign size = 1 %}{% for item in artist_dupes_array %}{% if item == node_artist %}{% capture size %}{{ size | plus: 1 }}{% endcapture %}{% endif %}{% endfor %}{{ size }}
    },{% endfor %}{% for item in unique_themes_array %}{% assign node_theme = item %} 
    {
      "id": "th-{{ node_theme | downcase | remove: ' ' | remove: '/' | remove: ':' | remove: '-' }}",
      "label": "{{ node_theme }}",
      "type": "theme",
      "url": "siteindex.html#{{ node_theme | downcase | remove: ' ' | remove: '/' | remove: ':' | remove: '-' }}",
      "size": {% assign size = 1 %}{% for item in theme_dupes_array %}{% if item == node_theme %}{% capture size %}{{ size | plus: 1 }}{% endcapture %}{% endif %}{% endfor %}{{ size }}
    }{% if forloop.last == true %}{% else %},{% endif %}{% endfor %}
  ],
  "edges": [ {% for post in site.posts %}{% if forloop.last == true %}{% for item in post.network %}
    {
      "id": "e{{ forloop.index }}-{{ post.date | date: "%F" }}",
      "source": "a-{{ item.artist | downcase | remove: ' ' }}",
      "target": "th-{{ item.theme | downcase | remove: ' ' | remove: '/' | remove: ':' | remove: '-' }}"
    }{% if forloop.last == true %}{% else %},{% endif %}{% endfor %}{% else %}{% for item in post.network %}
    {
      "id": "e{{ forloop.index }}-{{ post.date | date: "%F" }}",
      "source": "a-{{ item.artist | downcase | remove: ' ' }}",
      "target": "th-{{ item.theme | downcase | remove: ' ' | remove: '/' | remove: ':' | remove: '-' }}"
    },{% endfor %}{% endif %}{% endfor %}
  ]  
}


{% comment %}
  For the edges:
  I ran into a problem with the two for loops: for post in site.posts, and then for item in post.network. Because of this nesting I was having trouble getting it to recognize the last edge array in the series and omitting the final comma in that case. This is the best I cam up with. It works, but requires that there is a network artist and theme listed on the earliest post.
{% endcomment %}

{% comment %}
  For the nodes:
  1. Loop through the site to find artists and create a string
  2. Make that string an array (with assign and split)
  3. Loop though the newly created array, and build a string of uniques, and a second string of duplicates
  4. Make both strings arrays
  5. Use the uniques string to create node, use the duplicates to increase node size accordingly
{% endcomment %}









